grammar Attributes
  rule root
    a:key_value_pairs
    {
      def value
        a.value
      end
    }
  end

  rule key_value_pairs
    a:key_value tail:(',' b:key_value)*
    {
      def value
        [a.value] + tail.elements.map { |el| el.b.value }
      end
    }
  end

  rule key_value
    k:key '=' v:value
    {
      def value
        [k.value, v.value]
      end
    }
    /
    k:key
    {
      def value
        [k.value, k.value]
      end
    }
  end

  rule value
    [^\]=,]*
    {
      def value
        elements.map(&:text_value).join
      end
    }
  end

  rule key
    [a-zA-Z_] [a-zA-Z0-9\-_]*
    {
      def value
        elements.map(&:text_value).join
      end
    }
  end
end
